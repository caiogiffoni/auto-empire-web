// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  email         String     @unique
  username      String     @unique
  password      String
  first_name    String
  last_name     String
  cpf           String
  birthdate     DateTime
  is_admin      Boolean
  vehicles      Vehicle[]
  comments      Comment[]
  bid           Bid[]
}

model Vehicle {
  id            String    @id @default(uuid())
  photo         String      
  name          String      
  description   String
  year          Int
  km            Int
  price         Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  is_active     Boolean
  user_id       String
  gallery       Gallery[]
  comments      Comment[]
  bid           Bid[]
  auction       Auction[]
  user          User      @relation(fields: [user_id], references: [id])
}

model Gallery {
  id            String    @id @default(uuid())
  url           String      
  vehicle_id    String      
  vehicle       Vehicle   @relation(fields: [vehicle_id], references: [id])
}

model Comment {
  id            String    @id @default(uuid())
  is_active     Boolean      
  comment_text  String      
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user_id       String
  user          User      @relation(fields: [user_id], references: [id])
  vehicle_id    String
  vehicle       Vehicle   @relation(fields: [vehicle_id], references: [id])
}

model Bid {
  id            String    @id @default(uuid())
  price         Float
  createdAt     DateTime  @default(now())
  user_id       String
  user          User      @relation(fields: [user_id], references: [id])
  vehicle_id    String
  vehicle       Vehicle   @relation(fields: [vehicle_id], references: [id])
}

model Auction {
  id            String    @id @default(uuid())
  start_date    DateTime
  end_date      DateTime
  createdAt     DateTime  @default(now())
  is_active     Boolean
  vehicle_id    String
  vehicle       Vehicle   @relation(fields: [vehicle_id], references: [id])
}

